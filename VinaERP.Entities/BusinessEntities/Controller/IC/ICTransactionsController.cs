using System;
using System.Data;
using System.Text;
using System.Collections.Generic;
using VinaLib;
using System.Collections;

namespace VinaERP
{
    #region ICTransactions
    //-----------------------------------------------------------
    //Generated By:VinaERP Studio
    //Class:ICTransactionsController
    //Created Date:Sunday, April 28, 2019
    //-----------------------------------------------------------

    public class ICTransactionsController : BaseBusinessController
    {
        public ICTransactionsController()
        {
            dal = new DALBaseProvider("ICTransactions", typeof(ICTransactionsInfo));
        }

        public override IList GetListFromDataSet(DataSet ds)
        {
            List<ICTransactionsInfo> transactionList= new List<ICTransactionsInfo>();
            if (ds.Tables.Count > 0)
            {
                foreach (DataRow row in ds.Tables[0].Rows)
                {
                    ICTransactionsInfo objTransactionsInfo = (ICTransactionsInfo)GetObjectFromDataRow(row);
                    objTransactionsInfo.ICTransactionAvailableQty = objTransactionsInfo.ICTransactionExchangeQty - objTransactionsInfo.ICTransactionSaleOrderQty;
                    transactionList.Add(objTransactionsInfo);
                }
            }
            return transactionList;
        }

        public List<ICTransactionsInfo> GetInventoryStockByProductID(int productID, string productDesc, DateTime toDate)
        {
            DataSet ds = dal.GetDataSet("ICTransactions_GetInventoryStockByProductID", productID, productDesc, toDate);
            return (List<ICTransactionsInfo>)GetListFromDataSet(ds);
        }

        public decimal GetAvailabilityQtyForSale(int productID, int stockID, string stockLotNo, DateTime toDate)
        {
            return (decimal)dal.GetSingleValue("ICTransactions_GetAvailabilityQtyForSale", productID, stockID, stockLotNo, toDate);
        }

        public decimal GetAvailabilityQtyForShipment(int productID, int stockID, string stockLotNo, DateTime toDate)
        {
            return (decimal)dal.GetSingleValue("ICTransactions_GetAvailabilityQtyForShipment", productID, stockID, stockLotNo, toDate);
        }

        public List<ICTransactionsInfo> GetInventoryStatistics(DateTime fromDate, DateTime toDate, int? productID, int? stockID, bool isGroupByStock)
        {
            DataSet ds = dal.GetDataSet("ICTransactions_GetInventoryStatistics", fromDate, toDate, productID, stockID, isGroupByStock);
            return (List<ICTransactionsInfo>)GetListFromDataSet(ds);
        }
    }
    #endregion
}